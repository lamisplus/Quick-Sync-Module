[{"C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\index.js":"1","C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\App.js":"2","C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\reportWebVitals.js":"3","C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\context\\ThemeContext.js":"4","C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\jsx\\components\\Dashboard.js":"5","C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\context\\ThemeDemo.js":"6","C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\jsx\\components\\Utils\\PageUtils.js":"7","C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\jsx\\components\\Settings\\index.js":"8","C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\jsx\\components\\restore\\restoreList.js":"9","C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\jsx\\components\\Sync\\SyncList.js":"10","C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\jsx\\components\\backup\\backupList.js":"11","C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\api.js":"12","C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\jsx\\components\\Settings\\SettingList.js":"13","C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\jsx\\components\\backup\\backupModal.js":"14","C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\jsx\\components\\restore\\DownloadModal.js":"15","C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\jsx\\components\\restore\\restoreModal.js":"16","C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\jsx\\components\\Settings\\NewPersonalAccessToken.js":"17"},{"size":748,"mtime":1725898515454,"results":"18","hashOfConfig":"19"},{"size":891,"mtime":1725898515452,"results":"20","hashOfConfig":"19"},{"size":375,"mtime":1725898518067,"results":"21","hashOfConfig":"19"},{"size":9235,"mtime":1725898515495,"results":"22","hashOfConfig":"19"},{"size":4953,"mtime":1725898518044,"results":"23","hashOfConfig":"19"},{"size":3056,"mtime":1725898515496,"results":"24","hashOfConfig":"19"},{"size":275,"mtime":1725898518055,"results":"25","hashOfConfig":"19"},{"size":2189,"mtime":1725898518050,"results":"26","hashOfConfig":"19"},{"size":6392,"mtime":1731558622305,"results":"27","hashOfConfig":"19"},{"size":15455,"mtime":1725898518051,"results":"28","hashOfConfig":"19"},{"size":5577,"mtime":1725898518056,"results":"29","hashOfConfig":"19"},{"size":494,"mtime":1731554388366,"results":"30","hashOfConfig":"19"},{"size":8909,"mtime":1725898518049,"results":"31","hashOfConfig":"19"},{"size":4800,"mtime":1725898518057,"results":"32","hashOfConfig":"19"},{"size":12471,"mtime":1725898518058,"results":"33","hashOfConfig":"19"},{"size":9477,"mtime":1731558464785,"results":"34","hashOfConfig":"19"},{"size":7516,"mtime":1725898518047,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"8hyp0n",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":1,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":1,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"80"},"C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\index.js",["81"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, MemoryRouter as Router,} from 'react-router-dom';\r\n\r\nimport reportWebVitals from \"./../src/main/webapp/reportWebVitals\";\r\nimport SimpleReactLightbox from \"simple-react-lightbox\";\r\nimport  ThemeContext  from \"./../src/main/webapp/context/ThemeContext\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\r\n            <SimpleReactLightbox>\r\n                <BrowserRouter basename='/'>\r\n                    <ThemeContext>\r\n                        <App />\r\n                    </ThemeContext>\r\n                </BrowserRouter>\r\n            </SimpleReactLightbox>\r\n\r\n\t</React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\nreportWebVitals();","C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\App.js",[],"C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\reportWebVitals.js",[],"C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\context\\ThemeContext.js",[],"C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\jsx\\components\\Dashboard.js",["82","83","84","85","86","87","88","89","90"],"import React, {useEffect, useState} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"moment\";\r\nimport momentLocalizer from \"react-widgets-moment\";\r\n\r\nimport {getQueryParams} from \"./../components/Utils/PageUtils\";\r\n\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Fade from '@material-ui/core/Fade'\r\nimport SyncList from './Sync/SyncList';\r\nimport Setting from './Settings/index'\r\nimport Backup from './backup/backupList'\r\nimport Restore from './restore/restoreList'\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\n//import SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport CloudSyncIcon from '@mui/icons-material/CloudSync';\r\n\r\n//Dtate Picker package\r\nMoment.locale(\"en\");\r\nmomentLocalizer();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    fontSize: \"20px\",\r\n    fontWeight: \"bold\",\r\n    padding: \"5px\",\r\n    paddingBottom: \"10px\",\r\n  },\r\n  inforoot: {\r\n    margin: \"5px\",\r\n  },\r\n\r\n  dropdown: {\r\n    marginTop :\"50px\"\r\n   \r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  downmenu: {\r\n    display: 'flex'\r\n    },\r\n}));\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={5}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    \"aria-controls\": `scrollable-force-tabpanel-${index}`,\r\n  };\r\n}\r\nfunction HomePage(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(null);\r\n  \r\n  const [setting, setSetting] = useState(false);\r\n  const getstate= props.location && props.location.state ? props.location.state : \" \" ;\r\n  const urlIndex = getQueryParams(\"tab\", props.location && props.location.search ? props.location.search : \"\"); \r\n  const urlTabs = urlIndex !== null ? urlIndex : getstate ;\r\n  useEffect ( () => {\r\n    switch(urlTabs){  \r\n      case \"database-sync\": return setValue(0)\r\n      case \"setting\": return setValue(1)\r\n\r\n      default: return setValue(0)\r\n    }\r\n  }, [urlIndex]);\r\n  \r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n\r\n/*Tab Dropdown   */\r\nconst [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setValue(1)\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n    setSetting(true)\r\n  };\r\n\r\n  const settingDropdown = () => {\r\n    handleClose()\r\n    setSetting(true)\r\n  };\r\n\r\n/*Tab Dropdown   */\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className={classes.root} >\r\n      <AppBar position=\"static\" style={{backgroundColor:'#014d88'}}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"on\"\r\n          indicatorColor=\"secondary\"\r\n          textColor=\"inherit\"\r\n          aria-label=\"scrollable force tabs example\"\r\n        >\r\n        {/*\r\n          <Tab className={classes.title} label=\"Central Sync\" icon={<CloudSyncIcon style={{ color:'#fff'}}/>} {...a11yProps(0)} />\r\n          <Tab className={classes.title} label=\"Configuration  \" icon={<SettingsIcon />} {...a11yProps(1)}/>\r\n        */}\r\n          <Tab className={classes.title} label=\"Quick Sync\" icon={<RestoreIcon />} {...a11yProps(0)}/>\r\n      </Tabs>\r\n      </AppBar>\r\n\r\n      <Menu\r\n        id=\"fade-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Fade}\r\n        className={classes.dropdown}\r\n      >\r\n        <MenuItem onClick={settingDropdown}>Personal Access Token</MenuItem>\r\n\r\n      </Menu>\r\n        {/*\r\n        <TabPanel value={value} index={0}>\r\n          <SyncList />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n              <Setting />\r\n        </TabPanel>\r\n        */}\r\n        <TabPanel value={value} index={0}>\r\n          <Restore />\r\n        </TabPanel>\r\n       {/* <TabPanel value={value} index={3}>\r\n          <Backup />\r\n        </TabPanel> */}\r\n     </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HomePage;","C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\context\\ThemeDemo.js",[],"C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\jsx\\components\\Utils\\PageUtils.js",[],"C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\jsx\\components\\Settings\\index.js",["91","92","93","94","95","96","97"],"import React, {useState, useEffect} from 'react'\r\nimport axios from \"axios\";\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\nimport SettingList from './SettingList' \r\n\r\n\r\n\r\nconst TabExampleMenuPositionRight = (props) => {\r\n\r\n    const defaultValues = { username: \"\", password: \"\", url:\"\" }\r\n    const [patDetails, setPatDetails] = useState(defaultValues);\r\n    const [saving, setSaving] = useState(false);\r\n    const [serverUrl, setServerUrl] = useState( [])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n      ServerUrl()\r\n    }, []);\r\n        ///GET LIST OF Facilities\r\n        async function ServerUrl() {\r\n          axios\r\n              .get(`${baseUrl}sync/remote-urls`,\r\n              //{ headers: {\"Authorization\" : `Bearer ${token}`} }\r\n              )\r\n              .then((response) => {\r\n                  console.log(response.data)\r\n                  setServerUrl(\r\n                      Object.entries(response.data).map(([key, value]) => ({\r\n                          label: value.url,\r\n                          value: value.id,\r\n                        }))\r\n                  );\r\n              })\r\n              .catch((error) => {\r\n  \r\n              });\r\n      \r\n      }\r\n    \r\n    const handleInputChange = e => {\r\n      setPatDetails ({...patDetails,  [e.target.name]: e.target.value});\r\n      console.log(patDetails)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n      console.log(patDetails)\r\n      e.preventDefault();      \r\n      setSaving(true);\r\n      axios.post(`${baseUrl}sync/remote-access-token`,\r\n     // { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n      patDetails\r\n      )\r\n                  .then(response => {\r\n                      setSaving(false);\r\n                      toast.success(\"Token Generated Successful\");\r\n\r\n                  })\r\n                  .catch(error => {\r\n                      setSaving(false);\r\n                      toast.error(\"Something went wrong\");\r\n                  });\r\n    };\r\n\r\n\r\n\r\n\r\n  return (    \r\n          \r\n          <SettingList />\r\n        )\r\n\r\n}\r\n\r\nexport default TabExampleMenuPositionRight","C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\jsx\\components\\restore\\restoreList.js",["98","99","100","101","102","103","104"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport axios from \"axios\";\r\nimport { token as token, url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Badge, Spinner } from \"reactstrap\";\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport UploadIcon from '@mui/icons-material/Upload';\r\nimport RestoreModal from \"./restoreModal\";\r\nimport DownloadModal from \"./DownloadModal\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n\r\nconst RestoreList = (props) => {\r\n  const [syncList, setSyncList] = useState([]);\r\n  const [modalZipUpload, setmodalZipUpload] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n  const [modalDownload, setModalDownload] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n  const toggleDownload = () => setModalDownload(!modalDownload);\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  useEffect(() => {\r\n    syncHistory();\r\n\r\n  }, []);\r\n\r\n  async function syncHistory() {\r\n    axios\r\n      .get(`${baseUrl}quick-sync/history`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setSyncList(response?.data);\r\n      })\r\n      .catch((error) => { });\r\n  }\r\n\r\n  const syncDataBase = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const syncDownload = () => {\r\n    setModalDownload(!modalDownload);\r\n  };\r\n\r\n  const PageTitle = ({ motherMenu, activeMenu, pageContent }) => {\r\n    let path = window.location.pathname.split(\"/\");\r\n    return (\r\n      <div className=\"row page-titles mx-0\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item active\"><Link to={`/${path[path.length - 1]}`}>{motherMenu}</Link></li>\r\n          <li className=\"breadcrumb-item  \"><Link to={`/${path[path.length - 1]}`}>{activeMenu}</Link></li>\r\n        </ol>\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <PageTitle activeMenu=\"Quick Sync\" motherMenu=\"Sync \" />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className=\" float-right mr-1\"\r\n        startIcon={<UploadIcon />}\r\n        onClick={syncDataBase}\r\n        style={{ backgroundColor: '#014d88', fontWeight: \"bolder\" }}\r\n      >\r\n        <span style={{ textTransform: \"capitalize\" }}>Upload</span>\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className=\" float-right mr-1\"\r\n        startIcon={<DownloadIcon />}\r\n        onClick={syncDownload}\r\n        style={{ backgroundColor: '#014d88', fontWeight: \"bolder\" }}\r\n      >\r\n        <span style={{ textTransform: \"capitalize\" }}>Download </span>\r\n      </Button>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Quick Sync Upload List \"\r\n        columns={[\r\n          { title: \"Facility Name\", field: \"name\" },\r\n          { title: \"Table Name\", field: \"url\", filtering: false },\r\n          { title: \"No of records\", field: \"uploadSize\", filtering: false },\r\n          { title: \"Date of Upload \", field: \"date\", filtering: false },\r\n          { title: \"Status\", field: \"status\", filtering: false },\r\n        ]}\r\n        data={syncList.map((row) => ({\r\n          name: row.filename,\r\n          url: row.tableName,\r\n          uploadSize: row.fileSize,\r\n          date: row.dateCreated.replace(\"T\", \" \"),\r\n          status: <Badge color=\"info\">{row.status}</Badge>,\r\n        }))}\r\n        options={{\r\n          headerStyle: {\r\n            backgroundColor: \"#014d88\",\r\n            color: \"#fff\",\r\n          },\r\n          searchFieldStyle: {\r\n            width: \"200%\",\r\n            margingLeft: \"250px\",\r\n          },\r\n          filtering: false,\r\n          exportButton: false,\r\n          searchFieldAlignment: \"left\",\r\n          pageSizeOptions: [10, 20, 100],\r\n          pageSize: 10,\r\n          debounceInterval: 400,\r\n        }}\r\n      />\r\n      <RestoreModal modalstatus={modal} togglestatus={toggle} setSyncList={setSyncList} />\r\n      <DownloadModal\r\n        modalstatus={modalDownload}\r\n        togglestatus={toggleDownload}\r\n        setSyncList={setSyncList}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RestoreList;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\jsx\\components\\Sync\\SyncList.js",["105","106","107","108","109","110","111","112"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n//import { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\n//import { MdModeEdit } from \"react-icons/md\";\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\n    Row,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n//import SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Alert } from 'reactstrap';\r\nimport { Spinner } from 'reactstrap';\r\n//import { DropzoneArea } from 'material-ui-dropzone';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\nimport { useHistory } from \"react-router-dom\";\r\n//import { compileString } from 'sass';\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\nconst SyncList = (props) => {\r\n    let history = useHistory();\r\n  // The state for our timer\r\n  const classes = useStyles()\r\n  const [syncList, setSyncList] = useState( [])\r\n  const [facilities, setFacilities] = useState( [])\r\n  const [serverUrl, setServerUrl] = useState( [])\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const defaultValues = { facilityId: \"\", serverUrl : \"\" }\r\n  const [uploadDetails, setUploadDetails] = useState(defaultValues);\r\n  const [saving, setSaving] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n \r\n\tconst Ref = useRef(null);\r\n\r\n    useEffect(() => {\r\n        syncHistory()\r\n        Facilities()\r\n        ServerUrl()\r\n        const timer = setTimeout(() => console.log('Initial timeout!'), 1);\r\n        return () => clearTimeout(timer);\r\n      }, []);\r\n    \r\n          /*****  Validation */\r\n    const validate = () => {\r\n        let temp = { ...errors };\r\n        temp.facilityId = uploadDetails.facilityId\r\n            ? \"\"\r\n            : \"Facility is required\";\r\n            temp.serverUrl  = uploadDetails.serverUrl \r\n            ? \"\"\r\n            : \"URL is required\";\r\n            \r\n            setErrors({\r\n                ...temp,\r\n            });\r\n            return Object.values(temp).every((x) => x === \"\");\r\n        };\r\n     ///GET LIST OF Sync History\r\n    async function syncHistory() {\r\n\r\n        axios\r\n            .get(`${baseUrl}sync/sync-history`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSyncList(response.data);\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    ///GET LIST OF Facilities\r\n    async function Facilities() {\r\n        axios\r\n            .get(`${baseUrl}sync/facilities`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setFacilities(\r\n                    Object.entries(response.data).map(([key, value]) => ({\r\n                        label: value.name,\r\n                        value: value.id,\r\n                      }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    ///GET LIST OF Facilities\r\n    async function ServerUrl() {\r\n        axios\r\n            .get(`${baseUrl}sync/remote-urls`,\r\n             { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setServerUrl(\r\n                    Object.entries(response.data).map(([key, value]) => ({\r\n                        label: value.url + \" - \" + value.username,\r\n                        value: value.url,\r\n                      }))\r\n                );\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        setUploadDetails ({...uploadDetails,  [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n       \r\n        e.preventDefault();\r\n             \r\n            \r\n           if(validate()){\r\n            setSaving(true);\r\n            axios.post(`${baseUrl}sync/upload`, uploadDetails,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n            )\r\n                        .then(response => {\r\n                            setSaving(false);\r\n                            toast.success(\"Upload Successful\");\r\n                            syncHistory();\r\n                            //Closing of the modal \r\n                            toggle();\r\n                        })\r\n                        .catch(error => {\r\n                            setSaving(false);\r\n                            toast.error(\"Something went wrong\");\r\n                        });\r\n             }       \r\n      };\r\n\r\n    const syncDataBase =()=> {        \r\n        setModal(!modal)\r\n    }\r\n    \r\n \r\n  return (\r\n    <div>\r\n       \r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\" float-right mr-1\"\r\n            //startIcon={<FaUserPlus />}\r\n            onClick={syncDataBase}\r\n          >\r\n            <span style={{ textTransform: \"capitalize\" }}>Upload </span>\r\n        </Button>        \r\n        <br/><br/>\r\n        <br/>\r\n      <MaterialTable\r\n       icons={tableIcons}\r\n        title=\"Sync List \"\r\n        columns={[\r\n         // { title: \" ID\", field: \"Id\" },\r\n          {\r\n            title: \"Facility Name\",\r\n            field: \"name\",\r\n          },\r\n          { title: \"Table Name\", field: \"url\", filtering: false },\r\n          { title: \"Upload Size\", field: \"uploadSize\", filtering: false },\r\n          { title: \"Date of Upload \", field: \"date\", filtering: false },\r\n          { title: \"Status\", field: \"status\", filtering: false },        \r\n         \r\n        ]}\r\n        data={ [].map((row) => ({\r\n            //Id: manager.id,\r\n              name: row.facilityName,\r\n              url: row.tableName,\r\n              uploadSize: row.uploadSize,\r\n              date:  row.dateLastSync,\r\n              status: row.processed===0 ? \"Processing\" : \"Completed\",\r\n            \r\n            }))}\r\n       \r\n                  options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#9F9FA5\",\r\n                        color: \"#000\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width : '200%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions:[10,20,100],\r\n                    pageSize:10,\r\n                    debounceInterval: 400\r\n                }}\r\n      />\r\n    \r\n    <Modal isOpen={modal} toggle={toggle} className={props.className} size=\"lg\" backdrop={false} backdrop=\"static\">\r\n              <Form >\r\n             <ModalHeader toggle={toggle}>Upload</ModalHeader>\r\n                <ModalBody>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                  \r\n                                    <Col md={12}>\r\n                                    <FormGroup>\r\n                                    <Label >Facility *</Label>\r\n                                            <Input\r\n                                                type=\"select\"\r\n                                                name=\"facilityId\"\r\n                                                id=\"facilityId\"\r\n                                                onChange={handleInputChange}\r\n                                                required\r\n                                                >\r\n                                                <option > </option>\r\n                                                {facilities.map(({ label, value }) => (\r\n                                                    <option key={value} value={value}>\r\n                                                    {label}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.facilityId !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.facilityId}</span>\r\n                                            ) : \"\" } \r\n                                    </FormGroup>\r\n                                    </Col> \r\n                                    <Col md={12}>\r\n                                    <FormGroup>\r\n                                    <Label >URL *</Label>\r\n                                            <Input\r\n                                                type=\"select\"\r\n                                                name=\"serverUrl\"\r\n                                                id=\"serverUrl\"\r\n                                                onChange={handleInputChange}\r\n                                                required\r\n                                                >\r\n                                                <option > </option>\r\n                                                {serverUrl.map(({ label, value }) => (\r\n                                                    <option key={value} value={value}>\r\n                                                    {label}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                            {errors.serverUrl !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.serverUrl}</span>\r\n                                            ) : \"\" } \r\n                                    </FormGroup>\r\n                                    </Col>                    \r\n                                  </Row>\r\n                                      <br/>\r\n                                      {saving ? <Spinner /> : \"\"}\r\n                                        <br />\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<SettingsBackupRestoreIcon />}\r\n                                              onClick={handleSubmit}\r\n                                             \r\n                                          >   \r\n                                             {!saving ? (\r\n                                                <span style={{ textTransform: \"capitalize\" }}>Upload</span>\r\n                                                ) : (\r\n                                                <span style={{ textTransform: \"capitalize\" }}>Uploading Please Wait...</span>\r\n                                                )\r\n                                            } \r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                              onClick={toggle}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              <span style={{ textTransform: \"capitalize \" }}>cancel</span>\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SyncList;\r\n\r\n\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\jsx\\components\\backup\\backupList.js",["113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\nimport { forwardRef } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { Modal, ModalHeader, ModalBody,Form,\r\n    Row,Col, Card,CardBody, FormGroup, Label, Input} from 'reactstrap';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Spinner } from 'reactstrap';\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\nimport BackUpModal from './backupModal'\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst BackUpList = (props) => {\r\n\r\n  const [syncList, setSyncList] = useState( [])\r\n\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [saving, setSaving] = useState(false);\r\n    useEffect(() => {\r\n        syncHistory()\r\n        // const timer = setTimeout(() => console.log('Initial timeout!'), 1);\r\n        // return () => clearTimeout(timer);\r\n      }, []);\r\n\r\n     ///GET LIST OF Sync History\r\n    async function syncHistory() {\r\n        axios\r\n            .get(`${baseUrl}sync/sync-history`,\r\n           { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                setSyncList(response.data);\r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n    const syncDataBase =()=> {        \r\n        setModal(!modal)\r\n    }\r\n    \r\n \r\n  return (\r\n    <div>\r\n       \r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\" float-right mr-1\"\r\n            //startIcon={<FaUserPlus />}\r\n            onClick={syncDataBase}\r\n          >\r\n            <span style={{ textTransform: \"capitalize\" }}>BackUp Database </span>\r\n        </Button>\r\n        <br/><br/>\r\n        <br/>\r\n      <MaterialTable\r\n       icons={tableIcons}\r\n        title=\"Backup List \"\r\n        columns={[\r\n         // { title: \" ID\", field: \"Id\" },\r\n          {\r\n            title: \"Facility Name\",\r\n            field: \"name\",\r\n          },\r\n          { title: \"Table Name\", field: \"url\", filtering: false },\r\n          { title: \"Upload Size\", field: \"uploadSize\", filtering: false },\r\n          { title: \"Date of Upload \", field: \"date\", filtering: false },\r\n          { title: \"Status\", field: \"status\", filtering: false },        \r\n         \r\n        ]}\r\n        data={ [].map((row) => ({\r\n            //Id: manager.id,\r\n              name: row.facilityName,\r\n              url: row.tableName,\r\n              uploadSize: row.uploadSize,\r\n              date:  row.dateLastSync,\r\n              status: row.processed===0 ? \"Processing\" : \"Completed\",\r\n            \r\n            }))}\r\n       \r\n                  options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#9F9FA5\",\r\n                        color: \"#000\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width : '200%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions:[10,20,100],\r\n                    pageSize:10,\r\n                    debounceInterval: 400\r\n                }}\r\n      />\r\n    <BackUpModal modalstatus={modal} togglestatus={toggle} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BackUpList;\r\n\r\n\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\api.js",[],"C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\jsx\\components\\Settings\\SettingList.js",["132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport axios from \"axios\";\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\nimport NewPersonalAccessToken from './NewPersonalAccessToken'\r\n\r\nimport { forwardRef } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport { MdDashboard, MdDeleteForever, MdModeEdit } from \"react-icons/md\";\r\nimport {Menu,MenuList,MenuButton,MenuItem,} from \"@reach/menu-button\";\r\nimport \"@reach/menu-button/styles.css\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst tableIcons = {\r\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\nconst SettingList = (props) => {\r\n    let history = useHistory();\r\n  // The state for our timer\r\n  const classes = useStyles()\r\n  const [syncList, setSyncList] = useState( [])\r\n  const [facilities, setFacilities] = useState( [])\r\n  const [serverUrl, setServerUrl] = useState( [])\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [showModal, setShowModal] = React.useState(false);\r\n  const toggleModal = () => setShowModal(!showModal)\r\n  const defaultValues = { facility: \"\", url: \"\" }\r\n  const [uploadDetails, setUploadDetails] = useState(defaultValues);\r\n  const [saving, setSaving] = useState(false);\r\n \r\n\tconst Ref = useRef(null);\r\n\r\n    useEffect(() => {\r\n        ServerUrl()\r\n      }, []);\r\n\r\n    \r\n    \r\n    ///GET LIST OF Remote URL\r\n    async function ServerUrl() {\r\n        axios\r\n            .get(`${baseUrl}sync/remote-urls`,\r\n            { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n            )\r\n            .then((response) => {\r\n                \r\n                setServerUrl(response.data)\r\n                \r\n            })\r\n            .catch((error) => {\r\n\r\n            });\r\n    \r\n    }\r\n\r\n    const syncDataBase =()=> {        \r\n        setShowModal(!showModal)\r\n    }\r\n    \r\n \r\n  return (\r\n    <div>\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\" float-right mr-1\"\r\n            //startIcon={<FaUserPlus />}\r\n            onClick={syncDataBase}\r\n          >\r\n            <span style={{ textTransform: \"capitalize\" }}>New Personal Access Token </span>\r\n        </Button>        \r\n        <br/><br/>\r\n        <br/>\r\n      <MaterialTable\r\n       icons={tableIcons}\r\n        title=\"Personal Access Token List\"\r\n        columns={[\r\n         // { title: \" ID\", field: \"Id\" },\r\n          {\r\n            title: \"URLS\",\r\n            field: \"name\",\r\n          },\r\n          { title: \"Username\", field: \"url\", filtering: false },\r\n          { title: \" Status\", field: \"date\", filtering: false },\r\n          { title: \"Action\", field: \"actions\", filtering: false },\r\n         \r\n         \r\n        ]}\r\n        data={ [].map((row) => ({\r\n            //Id: manager.id,\r\n              name: row.url,\r\n              url: row.username,\r\n              date:  \"Active\",\r\n              actions:\r\n              <div>\r\n\r\n                  <Menu>\r\n                      <MenuButton style={{ backgroundColor:\"#3F51B5\", color:\"#fff\", border:\"2px solid #3F51B5\", borderRadius:\"4px\", }}>\r\n                          Actions <span aria-hidden>▾</span>\r\n                      </MenuButton>\r\n                      <MenuList style={{ color:\"#000 !important\"}} >\r\n\r\n\r\n                          <MenuItem  style={{ color:\"#000 !important\"}}>\r\n                              <Link\r\n                                  to ={{\r\n                                      pathname: \"/patient-dashboard\",\r\n                                      state: (row.details && row.details.hospitalNumber ? row.details.hospitalNumber : row.hospitalNumber)\r\n                                  }}\r\n                              >\r\n                                  <MdDashboard size=\"15\" color=\"blue\" />{\" \"}<span style={{color: '#000'}}>Re-Generate</span>\r\n                              </Link>\r\n                          </MenuItem>\r\n\r\n                          <MenuItem style={{ color:\"#000 !important\"}}>\r\n                              <Link\r\n                                  to={{\r\n                                      pathname: \"/patient-update-formio\",\r\n                                      state: (row.details && row.details.hospitalNumber ? row.details.hospitalNumber : row.hospitalNumber)\r\n                                  }}\r\n                              >\r\n                                  <MdModeEdit size=\"15\" color=\"blue\" />{\" \"}<span style={{color: '#000'}}>Edit  </span>\r\n                              </Link>\r\n                          </MenuItem>\r\n                          <MenuItem style={{ color:\"#000 !important\"}}>\r\n                              <Link\r\n                                  //onClick={() => onDelete(row)}\r\n                                  >\r\n                                  <MdDeleteForever size=\"15\" color=\"blue\" />{\" \"}\r\n                                  <span style={{color: '#000'}}>Delete </span>\r\n                              </Link>\r\n                          </MenuItem>\r\n                      </MenuList>\r\n                  </Menu>\r\n              </div>\r\n            }))}\r\n       \r\n                  options={{\r\n                    headerStyle: {\r\n                        backgroundColor: \"#9F9FA5\",\r\n                        color: \"#000\",\r\n                    },\r\n                    searchFieldStyle: {\r\n                        width : '200%',\r\n                        margingLeft: '250px',\r\n                    },\r\n                    filtering: false,\r\n                    exportButton: false,\r\n                    searchFieldAlignment: 'left',\r\n                    pageSizeOptions:[10,20,100],\r\n                    pageSize:10,\r\n                    debounceInterval: 400\r\n                }}\r\n      />\r\n    \r\n    <NewPersonalAccessToken toggleModal={toggleModal} showModal={showModal} ServerUrl={ServerUrl}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingList;\r\n\r\n\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\jsx\\components\\backup\\backupModal.js",["148","149","150","151","152","153","154","155"],"import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\nRow,Col, Card,CardBody} from 'reactstrap';\r\nimport MatButton from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\nimport { Alert } from 'reactstrap';\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    } \r\n}))\r\n\r\n\r\nconst url = 'http://lamisplus.org/base-module/api/encounters/87cb9bc7-ea0d-4c83-a70d-b57a5fb7769e/%7BdateStart%7D/%7BdateEnd%7D'\r\nconst token = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJndWVzdEBsYW1pc3BsdXMub3JnIiwiYXV0aCI6IlN1cGVyIEFkbWluIiwibmFtZSI6IkVtbWEgSXNvYm9rbyIsImV4cCI6MTYxODQ5MTczOX0.bOcbjIjEdEyc_S7VfJrpgSaajHG2e_c-fAYwwGiucb2-9DXgQruW9lnuBIJzL0CZnTdevOcAsAYVy61jlFs9Kw'\r\n\r\nconst DataBaseUp = (props) => {\r\n    const classes = useStyles()\r\n    const BackupProcessing = e => {\r\n     alert ('Backup Processing. Please Wait...')\r\n    props.togglestatus();\r\n                    \r\n          \r\n  }\r\n\r\n\r\n      \r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.modalstatus} toggle={props.togglestatus} className={props.className} size=\"lg\">\r\n\r\n            <ModalHeader toggle={props.togglestatus}>Database Backup</ModalHeader>\r\n                <ModalBody>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n                                    <Col md={12} >\r\n                                        <Alert color=\"dark\" style={{backgroundColor:'#9F9FA5', color:\"#000\" , fontWeight: 'bolder', fontSize:'14px'}}>\r\n                                            <p style={{marginTop: '.7rem' }}>\r\n                                                Info : &nbsp;&nbsp;&nbsp;<span style={{ fontWeight: 'bolder'}}>{'Are you Sure want to continue'}</span>\r\n                                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                               \r\n                                            </p>\r\n\r\n                                        </Alert>\r\n                                    </Col>\r\n                                    \r\n                                    <Col md={6}>\r\n                                                                             \r\n                                      </Col>                   \r\n                                  </Row>\r\n                                      <br/>\r\n                                      \r\n                                      <br/>\r\n                                      \r\n                                          <MatButton\r\n                                              type='submit'\r\n                                              variant='contained'\r\n                                              color='primary'\r\n                                              className={classes.button}\r\n                                              startIcon={<BackupIcon />}\r\n                                              onClick={()=>BackupProcessing()}\r\n                                             \r\n                                          >   \r\n                                              BackUp\r\n                                          </MatButton>\r\n                                           \r\n                                          <MatButton\r\n                                              variant='contained'\r\n                                              color='default'\r\n                                              onClick={props.togglestatus}\r\n                                              className={classes.button}\r\n                                              startIcon={<CancelIcon />}\r\n                                          >\r\n                                              Cancel\r\n                                          </MatButton>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </ModalBody>\r\n        \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataBaseUp;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\jsx\\components\\restore\\DownloadModal.js",["156","157","158","159","160"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormFeedback,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { Alert } from \"reactstrap\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport ArrowDownwardIcon from \"@mui/icons-material/ArrowDownward\";\r\nimport { toast } from \"react-toastify\";\r\nimport FileSaver from \"file-saver\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nconst DownloadModal = (props) => {\r\n  const classes = useStyles();\r\n  let currentDate = new Date().toISOString().split(\"T\")[0];\r\n  const [loading, setLoading] = useState(false);\r\n  const [download, setDownload] = useState({\r\n    facilityId: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    program: \"\"\r\n  });\r\n  const [organisationUnitName, setOrganisationUnitName] = useState(\"\");\r\n\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validateInputs = () => {\r\n    let temp = { ...errors };\r\n    temp.facilityId = download.facilityId ? \"\" : \"Facility name is required.\";\r\n    temp.startDate = download.startDate ? \"\" : \"Start date is required.\";\r\n    temp.endDate = download.endDate ? \"\" : \"End date is required.\";\r\n    temp.program = download.program ? \"\" : \"Program is required.\";\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  const [facilities, setFacilities] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Facilities();\r\n  }, []);\r\n\r\n  const Facilities = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        setFacilities(response.data.applicationUserOrganisationUnits);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, innerText, id } = e.target;\r\n\r\n    if (innerText !== \"\" && id === \"facility\" ) {\r\n      console.log(innerText)\r\n      setOrganisationUnitName(innerText);\r\n    }\r\n\r\n    setDownload({\r\n      ...download,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const DatabaseRestoreProcess = (e) => {\r\n    e.preventDefault();\r\n\r\n    //console.log(\"data\", download);\r\n    if (validateInputs()) {\r\n\r\n      if (download.program === \"patient\") {\r\n        axios\r\n        .get(\r\n          `${baseUrl}quick-sync/export/person-data?facilityId=${download.facilityId}&startDate=${download.startDate}&endDate=${download.endDate}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n            responseType: \"blob\",\r\n          }\r\n        )\r\n        .then((response) => {\r\n          //console.log(response);\r\n          setLoading(false);\r\n          const fileName = `${organisationUnitName} ${download.program} ${currentDate}`;\r\n          const responseData = response.data;\r\n          let blob = new Blob([responseData], {\r\n            type: \"application/octet-stream\",\r\n          });\r\n\r\n          FileSaver.saveAs(blob, `${fileName}.json`);\r\n          toast.success(\"Patient Json generated successfully\");\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n      }else if (download.program === \"biometrics\") {\r\n        axios\r\n        .get(\r\n          `${baseUrl}quick-sync/export/biometric-data?facilityId=${download.facilityId}&startDate=${download.startDate}&endDate=${download.endDate}`,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n            responseType: \"blob\",\r\n          }\r\n        )\r\n        .then((response) => {\r\n          //console.log(response);\r\n          setLoading(false);\r\n          const fileName = `${organisationUnitName} ${download.program} ${currentDate}`;\r\n          const responseData = response.data;\r\n          let blob = new Blob([responseData], {\r\n            type: \"application/octet-stream\",\r\n          });\r\n\r\n          FileSaver.saveAs(blob, `${fileName}.json`);\r\n          toast.success(\"Biometrics Json generated successfully\");\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong. Please try again...\");\r\n          }\r\n        });\r\n      }else {\r\n        return null;\r\n      }\r\n\r\n\r\n    }\r\n    props.togglestatus();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={props.modalstatus}\r\n        toggle={props.togglestatus}\r\n        className={props.className}\r\n        size=\"lg\"\r\n      >\r\n        <Form>\r\n          <ModalHeader toggle={props.togglestatus}>\r\n            Download JSON File\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for=\"exampleSelect\">\r\n                        Facility Name <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"facilityId\"\r\n                        id=\"facility\"\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {facilities.map((value) => (\r\n                          <option\r\n                            key={value.id}\r\n                            value={value.organisationUnitId}\r\n                          >\r\n                            {value.organisationUnitName}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.facilityId !== \"\" ? (\r\n                        <span style={{ color: \"#f85032\", fontSize: \"11px\" }}>\r\n                          {errors.facilityId}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for=\"exampleSelect\">\r\n                        Program <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"program\"\r\n                        id=\"program\"\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}>select</option>\r\n                        <option value={\"biometrics\"}>Biometrics</option>\r\n                        {/*<option value={\"hts\"}>HTS</option>*/}\r\n                        <option value={\"patient\"}>Patient</option>\r\n\r\n                      </Input>\r\n                      {errors.program !== \"\" ? (\r\n                        <span style={{ color: \"#f85032\", fontSize: \"11px\" }}>\r\n                          {errors.program}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label>\r\n                        From <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <input\r\n                        type=\"date\"\r\n                        className=\"form-control\"\r\n                        name=\"startDate\"\r\n                        id=\"startDate\"\r\n                        min={\"1980-01-01\"}\r\n                        max={currentDate}\r\n                        value={download.startDate}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        required\r\n                      />\r\n                      {errors.startDate !== \"\" ? (\r\n                        <span style={{ color: \"#f85032\", fontSize: \"11px\" }}>\r\n                          {errors.startDate}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label>\r\n                        To <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <input\r\n                        type=\"date\"\r\n                        className=\"form-control\"\r\n                        name=\"endDate\"\r\n                        id=\"endDate\"\r\n                        min={\"1980-01-01\"}\r\n                        max={currentDate}\r\n                        //min={objValues.startDate}\r\n                        value={download.endDate}\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                        required\r\n                      />\r\n                      {errors.endDate !== \"\" ? (\r\n                        <span style={{ color: \"#f85032\", fontSize: \"11px\" }}>\r\n                          {errors.endDate}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <br />\r\n\r\n                <br />\r\n\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  startIcon={<ArrowDownwardIcon />}\r\n                  onClick={DatabaseRestoreProcess}\r\n                  disabled={download.program === \"\" ? true : false}\r\n                >\r\n                  Download\r\n                </MatButton>\r\n\r\n                <MatButton\r\n                  variant=\"contained\"\r\n                  color=\"default\"\r\n                  onClick={props.togglestatus}\r\n                  className={classes.button}\r\n                  startIcon={<CancelIcon />}\r\n                >\r\n                  Cancel\r\n                </MatButton>\r\n              </CardBody>\r\n            </Card>\r\n          </ModalBody>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DownloadModal;\r\n","C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\jsx\\components\\restore\\restoreModal.js",["161","162","163","164","165","166"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormFeedback,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport MatButton from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { Alert } from \"reactstrap\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { token, url as baseUrl } from \"../../../api\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport SettingsBackupRestoreIcon from \"@material-ui/icons/SettingsBackupRestore\";\r\nimport FileUploadIcon from \"@mui/icons-material/FileUpload\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(20),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  cardBottom: {\r\n    marginBottom: 20,\r\n  },\r\n  Select: {\r\n    height: 45,\r\n    width: 350,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nconst DatabaseRestore = (props) => {\r\n  const classes = useStyles();\r\n  const [facilities, setFacilities] = useState([]);\r\n  const [errors, setErrors] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [upload, setUpload] = useState({\r\n    facilityId: \"\",\r\n    files: [],\r\n  });\r\n\r\n  const validateInputs = () => {\r\n    let temp = { ...errors };\r\n    temp.facilityId = upload.facilityId ? \"\" : \"Facility name is required.\";\r\n\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    return Object.values(temp).every((x) => x === \"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    Facilities();\r\n  }, []);\r\n\r\n  const Facilities = () => {\r\n    axios\r\n      .get(`${baseUrl}account`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        setFacilities(response.data.applicationUserOrganisationUnits);\r\n      })\r\n      .catch((error) => {\r\n        //console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUpload({\r\n      ...upload,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleUploadChange = (files) => { \r\n    setUpload({\r\n      ...upload,\r\n      files: files[0],\r\n    });\r\n  };\r\n\r\n  async function syncHistory() {\r\n    axios\r\n      .get(`${baseUrl}quick-sync/history`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((response) => {\r\n        props.setSyncList(response.data);\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  const uploadProcess = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (validateInputs()) {\r\n      let fileName = upload.files.name;\r\n\r\n      const formData = new FormData();\r\n\r\n      formData.append(\"file\", upload.files);\r\n\r\n      if (fileName.includes(\"patient\") === true) {\r\n        axios\r\n        .post(\r\n          `${baseUrl}quick-sync/import/person-data?facilityId=${upload.facilityId}`,\r\n          formData,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n            responseType: \"blob\",\r\n          }\r\n        )\r\n        .then((response) => {\r\n          setLoading(false);\r\n          syncHistory();\r\n          toast.success(\"Patient Json uploaded successfully\");\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong uploading, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong uploading. Please try again...\");\r\n          }\r\n        });\r\n      }else if (fileName.includes(\"biometrics\") === true) {\r\n        axios\r\n        .post(\r\n          `${baseUrl}quick-sync/import/biometric-data?facilityId=${upload.facilityId}`,\r\n          formData,\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n            responseType: \"blob\",\r\n          }\r\n        )\r\n        .then((response) => {\r\n          setLoading(false);\r\n          syncHistory();\r\n          toast.success(\"Biometrics Json uploaded successfully\");\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          if (error.response && error.response.data) {\r\n            let errorMessage =\r\n              error.response.data.apierror &&\r\n              error.response.data.apierror.message !== \"\"\r\n                ? error.response.data.apierror.message\r\n                : \"Something went wrong uploading, please try again\";\r\n            toast.error(errorMessage);\r\n          } else {\r\n            toast.error(\"Something went wrong uploading. Please try again...\");\r\n          }\r\n        });\r\n      }\r\n      else if (fileName.includes(\"hts\") === true) {\r\n        axios\r\n            .post(\r\n                `${baseUrl}quick-sync/upload-client-zip?facilityId=${upload.facilityId}`,\r\n                formData,\r\n                {\r\n                  headers: { Authorization: `Bearer ${token}` },\r\n                }\r\n            )\r\n            .then((response) => {\r\n              setLoading(false);\r\n              syncHistory();\r\n              toast.success(\"HTS sync successfully\");\r\n            })\r\n            .catch((error) => {\r\n              setLoading(false);\r\n              if (error.response && error.response?.data) {\r\n                let errorMessage =\r\n                    error.response?.data &&\r\n                    error.response.data !== \"\"\r\n                        ? error.response?.data\r\n                        : \"Something went wrong uploading, please try again\";\r\n                toast.error(errorMessage);\r\n              } else {\r\n                toast.error(\"Something went wrong uploading. Please try again...\");\r\n              }\r\n            });\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    props.togglestatus();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={props.modalstatus}\r\n        toggle={props.togglestatus}\r\n        className={props.className}\r\n        size=\"lg\"\r\n      >\r\n        <Form>\r\n          <ModalHeader toggle={props.togglestatus}>\r\n            Upload JSON File\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <FormGroup>\r\n                      <Label for=\"exampleSelect\">\r\n                        Facility Name <span style={{ color: \"red\" }}> *</span>\r\n                      </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"facilityId\"\r\n                        id=\"facility\"\r\n                        onChange={handleInputChange}\r\n                        style={{\r\n                          border: \"1px solid #014D88\",\r\n                          borderRadius: \"0.2rem\",\r\n                        }}\r\n                      >\r\n                        <option value={\"\"}></option>\r\n                        {facilities.map((value) => (\r\n                          <option\r\n                            key={value.id}\r\n                            value={value.organisationUnitId}\r\n                          >\r\n                            {value.organisationUnitName}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                      {errors.facilityId !== \"\" ? (\r\n                        <span style={{ color: \"#f85032\", fontSize: \"11px\" }}>\r\n                          {errors.facilityId}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={12}>\r\n                    <DropzoneArea\r\n                      onChange={(files) => handleUploadChange(files)}\r\n                      showFileNames=\"true\"\r\n                      acceptedFiles={[\".json\", \".zip\"]}\r\n                      maxFileSize={\"100000000\"}\r\n                      filesLimit={1}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <br />\r\n\r\n                <br />\r\n\r\n                <MatButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  startIcon={<FileUploadIcon />}\r\n                  onClick={uploadProcess}\r\n                >\r\n                  Upload\r\n                </MatButton>\r\n\r\n                <MatButton\r\n                  variant=\"contained\"\r\n                  color=\"default\"\r\n                  onClick={props.togglestatus}\r\n                  className={classes.button}\r\n                  startIcon={<CancelIcon />}\r\n                >\r\n                  Cancel\r\n                </MatButton>\r\n              </CardBody>\r\n            </Card>\r\n          </ModalBody>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DatabaseRestore;","C:\\Users\\taiwo.gboyegun\\Documents\\newHivFolder\\Quick-Sync-Module\\src\\main\\webapp\\jsx\\components\\Settings\\NewPersonalAccessToken.js",["167","168","169","170","171","172"],"import React, {useState, useEffect} from 'react';\r\nimport { Modal, ModalHeader, ModalBody,Form,FormFeedback,\r\nRow,Col, Card,CardBody, FormGroup, Input, Label} from 'reactstrap';\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { Spinner } from 'reactstrap';\r\nimport axios from \"axios\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { token as token,  url as baseUrl } from \"./../../../api\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        margin: theme.spacing(20),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    cardBottom: {\r\n        marginBottom: 20\r\n    },\r\n    Select: {\r\n        height: 45,\r\n        width: 350\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    input: {\r\n        display: 'none'\r\n    },\r\n    error: {\r\n        color: \"#f85032\",\r\n        fontSize: \"11px\",\r\n    },\r\n    success: {\r\n        color: \"#4BB543 \",\r\n        fontSize: \"11px\",\r\n    }, \r\n}))\r\n\r\n\r\n\r\nconst DatabaseSyn = (props) => {\r\n    const classes = useStyles()\r\n    const [urlHide, setUrlHide] = useState(false);\r\n    const defaultValues = { username: \"\", password: \"\", url:\"\" }\r\n    const [patDetails, setPatDetails] = useState(defaultValues);\r\n    const [saving, setSaving] = useState(false);\r\n    const [serverUrl, setServerUrl] = useState( [])\r\n    const [errors, setErrors] = useState({});\r\n\r\n\r\n    useEffect(() => {\r\n      ServerUrl()\r\n    }, []);\r\n        ///GET LIST OF Facilities\r\n        async function ServerUrl() {\r\n          axios\r\n              .get(`${baseUrl}sync/remote-urls`,\r\n              { headers: {\"Authorization\" : `Bearer ${token}`} }\r\n              )\r\n              .then((response) => {\r\n                  setServerUrl(\r\n                      Object.entries(response.data).map(([key, value]) => ({\r\n                          label: value.url,\r\n                          value: value.id,\r\n                        }))\r\n                  );\r\n              })\r\n              .catch((error) => {\r\n  \r\n              });\r\n      \r\n      }\r\n    \r\n    const handleInputChange = e => {\r\n      setPatDetails ({...patDetails,  [e.target.name]: e.target.value});\r\n    }\r\n    /*****  Validation */\r\n    const validate = () => {\r\n    let temp = { ...errors };\r\n    temp.username = patDetails.username\r\n        ? \"\"\r\n        : \"Username is required\";\r\n        temp.password = patDetails.password\r\n        ? \"\"\r\n        : \"Password is required\";\r\n        temp.url = patDetails.url\r\n        ? \"\"\r\n        : \"Server URL is required\";\r\n        setErrors({\r\n            ...temp,\r\n        });\r\n        return Object.values(temp).every((x) => x === \"\");\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n            if (validate()) {      \r\n                    setSaving(true);\r\n                    axios.post(`${baseUrl}sync/remote-access-token`,patDetails,\r\n                     { headers: {\"Authorization\" : `Bearer ${token}`}},\r\n                    \r\n                    )\r\n                        .then(response => {\r\n                            setSaving(false);\r\n                            props.ServerUrl()\r\n                            toast.success(\"Token Generated Successful\");\r\n                            props.toggleModal()\r\n\r\n                        })\r\n                        .catch(error => {\r\n                            setSaving(false);\r\n                            toast.error(\"Something went wrong\");\r\n                        });\r\n            };\r\n        }\r\n\r\n      \r\n  return (      \r\n      <div >\r\n         \r\n              <Modal isOpen={props.showModal} toggle={props.toggleModal} className={props.className} size=\"lg\" backdrop={false} backdrop=\"static\">\r\n              <Form >\r\n             <ModalHeader toggle={props.toggleModal}>Personal Access Token </ModalHeader>\r\n                <ModalBody>\r\n                    \r\n                        <Card >\r\n                            <CardBody>\r\n                                <Row >\r\n\r\n                                <Col md={12}>\r\n                      <FormGroup>\r\n                      <Label >Server URL * </Label>\r\n                              <Input\r\n                                  type=\"text\"\r\n                                  name=\"url\"\r\n                                  id=\"url\"\r\n                                  value={patDetails.url} \r\n                                  onChange={handleInputChange}\r\n                                  required\r\n                                  />\r\n                                  {errors.url !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.url}</span>\r\n                                            ) : \"\" }   \r\n                      </FormGroup>\r\n                    </Col>                \r\n                    <Col md={12}>\r\n                  <FormGroup>\r\n                  <Label >Username </Label>\r\n                          <Input\r\n                              type=\"text\"\r\n                              name=\"username\"\r\n                              id=\"username\" \r\n                              value={patDetails.username}\r\n                              onChange={handleInputChange}\r\n                              required\r\n                              />\r\n                        {errors.username !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.username}</span>\r\n                                            ) : \"\" }\r\n                  </FormGroup>\r\n                  </Col>\r\n                  <Col md={12}>\r\n                  <FormGroup>\r\n                  <Label >Password </Label>\r\n                          <Input\r\n                              type=\"password\"\r\n                              name=\"password\"\r\n                              id=\"password\" \r\n                              value={patDetails.password}\r\n                              onChange={handleInputChange}\r\n                              required\r\n                              />\r\n                        {errors.password !==\"\" ? (\r\n                                                <span className={classes.error}>{errors.password}</span>\r\n                                            ) : \"\" }\r\n                  </FormGroup>\r\n                  </Col>                    \r\n                </Row>\r\n                    {saving ? <Spinner /> : \"\"}\r\n                    <br/>              \r\n                        <Button\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            \r\n                            //startIcon={<SettingsBackupRestoreIcon />}\r\n                            onClick={handleSubmit}\r\n                            \r\n                        >   \r\n                            <span style={{ textTransform: \"capitalize \" }}>Connect & Generate Token</span>  \r\n                        </Button>\r\n                            </CardBody>\r\n                        </Card> \r\n                    </ModalBody>\r\n        \r\n                </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DatabaseSyn;\r\n",{"ruleId":"173","severity":1,"message":"174","line":4,"column":41,"nodeType":"175","messageId":"176","endLine":4,"endColumn":47},{"ruleId":"173","severity":1,"message":"177","line":18,"column":8,"nodeType":"175","messageId":"176","endLine":18,"endColumn":16},{"ruleId":"173","severity":1,"message":"178","line":19,"column":8,"nodeType":"175","messageId":"176","endLine":19,"endColumn":15},{"ruleId":"173","severity":1,"message":"179","line":20,"column":8,"nodeType":"175","messageId":"176","endLine":20,"endColumn":14},{"ruleId":"173","severity":1,"message":"180","line":24,"column":8,"nodeType":"175","messageId":"176","endLine":24,"endColumn":18},{"ruleId":"173","severity":1,"message":"181","line":25,"column":8,"nodeType":"175","messageId":"176","endLine":25,"endColumn":20},{"ruleId":"173","severity":1,"message":"182","line":26,"column":8,"nodeType":"175","messageId":"176","endLine":26,"endColumn":21},{"ruleId":"173","severity":1,"message":"183","line":88,"column":10,"nodeType":"175","messageId":"176","endLine":88,"endColumn":17},{"ruleId":"184","severity":1,"message":"185","line":99,"column":6,"nodeType":"186","endLine":99,"endColumn":16,"suggestions":"187"},{"ruleId":"173","severity":1,"message":"188","line":110,"column":9,"nodeType":"175","messageId":"176","endLine":110,"endColumn":20},{"ruleId":"173","severity":1,"message":"189","line":4,"column":10,"nodeType":"175","messageId":"176","endLine":4,"endColumn":24},{"ruleId":"190","severity":1,"message":"191","line":6,"column":10,"nodeType":"192","messageId":"193","endLine":6,"endColumn":24,"fix":"194"},{"ruleId":"173","severity":1,"message":"195","line":6,"column":19,"nodeType":"175","messageId":"176","endLine":6,"endColumn":24},{"ruleId":"173","severity":1,"message":"196","line":15,"column":12,"nodeType":"175","messageId":"176","endLine":15,"endColumn":18},{"ruleId":"173","severity":1,"message":"197","line":16,"column":12,"nodeType":"175","messageId":"176","endLine":16,"endColumn":21},{"ruleId":"173","severity":1,"message":"198","line":44,"column":11,"nodeType":"175","messageId":"176","endLine":44,"endColumn":28},{"ruleId":"173","severity":1,"message":"199","line":49,"column":11,"nodeType":"175","messageId":"176","endLine":49,"endColumn":23},{"ruleId":"173","severity":1,"message":"200","line":1,"column":27,"nodeType":"175","messageId":"176","endLine":1,"endColumn":33},{"ruleId":"190","severity":1,"message":"191","line":4,"column":10,"nodeType":"192","messageId":"193","endLine":4,"endColumn":24,"fix":"201"},{"ruleId":"173","severity":1,"message":"202","line":25,"column":17,"nodeType":"175","messageId":"176","endLine":25,"endColumn":24},{"ruleId":"173","severity":1,"message":"203","line":57,"column":10,"nodeType":"175","messageId":"176","endLine":57,"endColumn":24},{"ruleId":"173","severity":1,"message":"204","line":57,"column":26,"nodeType":"175","messageId":"176","endLine":57,"endColumn":43},{"ruleId":"173","severity":1,"message":"196","line":63,"column":10,"nodeType":"175","messageId":"176","endLine":63,"endColumn":16},{"ruleId":"173","severity":1,"message":"205","line":63,"column":18,"nodeType":"175","messageId":"176","endLine":63,"endColumn":27},{"ruleId":"190","severity":1,"message":"191","line":4,"column":10,"nodeType":"192","messageId":"193","endLine":4,"endColumn":24,"fix":"206"},{"ruleId":"173","severity":1,"message":"207","line":6,"column":10,"nodeType":"175","messageId":"176","endLine":6,"endColumn":14},{"ruleId":"173","severity":1,"message":"208","line":30,"column":45,"nodeType":"175","messageId":"176","endLine":30,"endColumn":57},{"ruleId":"173","severity":1,"message":"209","line":36,"column":10,"nodeType":"175","messageId":"176","endLine":36,"endColumn":15},{"ruleId":"173","severity":1,"message":"210","line":108,"column":9,"nodeType":"175","messageId":"176","endLine":108,"endColumn":16},{"ruleId":"173","severity":1,"message":"211","line":111,"column":10,"nodeType":"175","messageId":"176","endLine":111,"endColumn":18},{"ruleId":"173","severity":1,"message":"212","line":121,"column":8,"nodeType":"175","messageId":"176","endLine":121,"endColumn":11},{"ruleId":"213","severity":1,"message":"214","line":292,"column":98,"nodeType":"215","messageId":"216","endLine":292,"endColumn":115},{"ruleId":"173","severity":1,"message":"200","line":1,"column":27,"nodeType":"175","messageId":"176","endLine":1,"endColumn":33},{"ruleId":"190","severity":1,"message":"191","line":4,"column":10,"nodeType":"192","messageId":"193","endLine":4,"endColumn":24,"fix":"217"},{"ruleId":"173","severity":1,"message":"207","line":6,"column":10,"nodeType":"175","messageId":"176","endLine":6,"endColumn":14},{"ruleId":"173","severity":1,"message":"218","line":22,"column":10,"nodeType":"175","messageId":"176","endLine":22,"endColumn":15},{"ruleId":"173","severity":1,"message":"219","line":22,"column":17,"nodeType":"175","messageId":"176","endLine":22,"endColumn":28},{"ruleId":"173","severity":1,"message":"220","line":22,"column":30,"nodeType":"175","messageId":"176","endLine":22,"endColumn":39},{"ruleId":"173","severity":1,"message":"221","line":22,"column":40,"nodeType":"175","messageId":"176","endLine":22,"endColumn":44},{"ruleId":"173","severity":1,"message":"222","line":23,"column":5,"nodeType":"175","messageId":"176","endLine":23,"endColumn":8},{"ruleId":"173","severity":1,"message":"223","line":23,"column":9,"nodeType":"175","messageId":"176","endLine":23,"endColumn":12},{"ruleId":"173","severity":1,"message":"224","line":23,"column":14,"nodeType":"175","messageId":"176","endLine":23,"endColumn":18},{"ruleId":"173","severity":1,"message":"225","line":23,"column":19,"nodeType":"175","messageId":"176","endLine":23,"endColumn":27},{"ruleId":"173","severity":1,"message":"226","line":23,"column":29,"nodeType":"175","messageId":"176","endLine":23,"endColumn":38},{"ruleId":"173","severity":1,"message":"227","line":23,"column":40,"nodeType":"175","messageId":"176","endLine":23,"endColumn":45},{"ruleId":"173","severity":1,"message":"228","line":23,"column":47,"nodeType":"175","messageId":"176","endLine":23,"endColumn":52},{"ruleId":"173","severity":1,"message":"202","line":25,"column":10,"nodeType":"175","messageId":"176","endLine":25,"endColumn":17},{"ruleId":"173","severity":1,"message":"229","line":26,"column":8,"nodeType":"175","messageId":"176","endLine":26,"endColumn":33},{"ruleId":"173","severity":1,"message":"211","line":52,"column":10,"nodeType":"175","messageId":"176","endLine":52,"endColumn":18},{"ruleId":"173","severity":1,"message":"196","line":56,"column":10,"nodeType":"175","messageId":"176","endLine":56,"endColumn":16},{"ruleId":"173","severity":1,"message":"205","line":56,"column":18,"nodeType":"175","messageId":"176","endLine":56,"endColumn":27},{"ruleId":"190","severity":1,"message":"191","line":4,"column":10,"nodeType":"192","messageId":"193","endLine":4,"endColumn":24,"fix":"230"},{"ruleId":"173","severity":1,"message":"189","line":25,"column":10,"nodeType":"175","messageId":"176","endLine":25,"endColumn":24},{"ruleId":"173","severity":1,"message":"231","line":25,"column":26,"nodeType":"175","messageId":"176","endLine":25,"endColumn":31},{"ruleId":"173","severity":1,"message":"210","line":93,"column":9,"nodeType":"175","messageId":"176","endLine":93,"endColumn":16},{"ruleId":"173","severity":1,"message":"232","line":95,"column":9,"nodeType":"175","messageId":"176","endLine":95,"endColumn":16},{"ruleId":"173","severity":1,"message":"211","line":96,"column":10,"nodeType":"175","messageId":"176","endLine":96,"endColumn":18},{"ruleId":"173","severity":1,"message":"233","line":96,"column":20,"nodeType":"175","messageId":"176","endLine":96,"endColumn":31},{"ruleId":"173","severity":1,"message":"234","line":97,"column":10,"nodeType":"175","messageId":"176","endLine":97,"endColumn":20},{"ruleId":"173","severity":1,"message":"235","line":97,"column":22,"nodeType":"175","messageId":"176","endLine":97,"endColumn":35},{"ruleId":"173","severity":1,"message":"197","line":98,"column":10,"nodeType":"175","messageId":"176","endLine":98,"endColumn":19},{"ruleId":"173","severity":1,"message":"236","line":100,"column":9,"nodeType":"175","messageId":"176","endLine":100,"endColumn":15},{"ruleId":"173","severity":1,"message":"237","line":104,"column":10,"nodeType":"175","messageId":"176","endLine":104,"endColumn":23},{"ruleId":"173","severity":1,"message":"238","line":104,"column":25,"nodeType":"175","messageId":"176","endLine":104,"endColumn":41},{"ruleId":"173","severity":1,"message":"196","line":105,"column":10,"nodeType":"175","messageId":"176","endLine":105,"endColumn":16},{"ruleId":"173","severity":1,"message":"205","line":105,"column":18,"nodeType":"175","messageId":"176","endLine":105,"endColumn":27},{"ruleId":"173","severity":1,"message":"212","line":107,"column":8,"nodeType":"175","messageId":"176","endLine":107,"endColumn":11},{"ruleId":"173","severity":1,"message":"239","line":1,"column":16,"nodeType":"175","messageId":"176","endLine":1,"endColumn":24},{"ruleId":"173","severity":1,"message":"240","line":1,"column":26,"nodeType":"175","messageId":"176","endLine":1,"endColumn":35},{"ruleId":"173","severity":1,"message":"221","line":2,"column":40,"nodeType":"175","messageId":"176","endLine":2,"endColumn":44},{"ruleId":"173","severity":1,"message":"208","line":2,"column":45,"nodeType":"175","messageId":"176","endLine":2,"endColumn":57},{"ruleId":"173","severity":1,"message":"202","line":9,"column":10,"nodeType":"175","messageId":"176","endLine":9,"endColumn":17},{"ruleId":"173","severity":1,"message":"241","line":10,"column":8,"nodeType":"175","messageId":"176","endLine":10,"endColumn":13},{"ruleId":"173","severity":1,"message":"242","line":50,"column":7,"nodeType":"175","messageId":"176","endLine":50,"endColumn":10},{"ruleId":"173","severity":1,"message":"243","line":51,"column":7,"nodeType":"175","messageId":"176","endLine":51,"endColumn":12},{"ruleId":"173","severity":1,"message":"208","line":7,"column":3,"nodeType":"175","messageId":"176","endLine":7,"endColumn":15},{"ruleId":"173","severity":1,"message":"244","line":18,"column":8,"nodeType":"175","messageId":"176","endLine":18,"endColumn":16},{"ruleId":"173","severity":1,"message":"209","line":20,"column":10,"nodeType":"175","messageId":"176","endLine":20,"endColumn":15},{"ruleId":"173","severity":1,"message":"202","line":21,"column":10,"nodeType":"175","messageId":"176","endLine":21,"endColumn":17},{"ruleId":"173","severity":1,"message":"245","line":66,"column":10,"nodeType":"175","messageId":"176","endLine":66,"endColumn":17},{"ruleId":"173","severity":1,"message":"208","line":7,"column":3,"nodeType":"175","messageId":"176","endLine":7,"endColumn":15},{"ruleId":"173","severity":1,"message":"244","line":18,"column":8,"nodeType":"175","messageId":"176","endLine":18,"endColumn":16},{"ruleId":"173","severity":1,"message":"209","line":20,"column":10,"nodeType":"175","messageId":"176","endLine":20,"endColumn":15},{"ruleId":"173","severity":1,"message":"202","line":21,"column":10,"nodeType":"175","messageId":"176","endLine":21,"endColumn":17},{"ruleId":"173","severity":1,"message":"229","line":25,"column":8,"nodeType":"175","messageId":"176","endLine":25,"endColumn":33},{"ruleId":"173","severity":1,"message":"245","line":68,"column":10,"nodeType":"175","messageId":"176","endLine":68,"endColumn":17},{"ruleId":"173","severity":1,"message":"208","line":2,"column":45,"nodeType":"175","messageId":"176","endLine":2,"endColumn":57},{"ruleId":"190","severity":1,"message":"191","line":11,"column":10,"nodeType":"192","messageId":"193","endLine":11,"endColumn":24,"fix":"246"},{"ruleId":"173","severity":1,"message":"247","line":61,"column":12,"nodeType":"175","messageId":"176","endLine":61,"endColumn":19},{"ruleId":"173","severity":1,"message":"248","line":61,"column":21,"nodeType":"175","messageId":"176","endLine":61,"endColumn":31},{"ruleId":"173","severity":1,"message":"197","line":65,"column":12,"nodeType":"175","messageId":"176","endLine":65,"endColumn":21},{"ruleId":"213","severity":1,"message":"214","line":139,"column":129,"nodeType":"215","messageId":"216","endLine":139,"endColumn":146},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'SyncList' is defined but never used.","'Setting' is defined but never used.","'Backup' is defined but never used.","'BackupIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'CloudSyncIcon' is defined but never used.","'setting' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'urlTabs'. Either include it or remove the dependency array.","ArrayExpression",["249"],"'handleClick' is assigned a value but never used.","'ToastContainer' is defined but never used.","no-useless-rename","Import token unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"250","text":"251"},"'token' is defined but never used.","'saving' is assigned a value but never used.","'serverUrl' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'useRef' is defined but never used.",{"range":"252","text":"251"},"'Spinner' is defined but never used.","'modalZipUpload' is assigned a value but never used.","'setmodalZipUpload' is assigned a value but never used.","'setSaving' is assigned a value but never used.",{"range":"253","text":"251"},"'Link' is defined but never used.","'FormFeedback' is defined but never used.","'Alert' is defined but never used.","'history' is assigned a value but never used.","'syncList' is assigned a value but never used.","'Ref' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps",{"range":"254","text":"251"},"'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Form' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'SettingsBackupRestoreIcon' is defined but never used.",{"range":"255","text":"251"},"'toast' is defined but never used.","'classes' is assigned a value but never used.","'setSyncList' is assigned a value but never used.","'facilities' is assigned a value but never used.","'setFacilities' is assigned a value but never used.","'toggle' is assigned a value but never used.","'uploadDetails' is assigned a value but never used.","'setUploadDetails' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'url' is assigned a value but never used.","'token' is assigned a value but never used.","'SaveIcon' is defined but never used.","'loading' is assigned a value but never used.",{"range":"256","text":"251"},"'urlHide' is assigned a value but never used.","'setUrlHide' is assigned a value but never used.",{"desc":"257","fix":"258"},[195,209],"token",[143,157],[142,156],[142,156],[142,156],[450,464],"Update the dependencies array to be: [urlIndex, urlTabs]",{"range":"259","text":"260"},[2877,2887],"[urlIndex, urlTabs]"]